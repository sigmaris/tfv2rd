on: [push, pull_request]

name: Checks

jobs:
  check:
    name: cargo check
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  lints:
    name: Linters
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Install reviewdog
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest

      - name: Install clippy-reviewdog-filter
        run: |
          mkdir -p "$HOME/.local/bin"
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          curl -fSL https://github.com/qnighy/clippy-reviewdog-filter/releases/download/v0.1.1/clippy-reviewdog-filter-$(uname -m)-unknown-linux-musl -o "$HOME/.local/bin/clippy-reviewdog-filter"
          chmod +x "$HOME/.local/bin/clippy-reviewdog-filter"

      - name: Run cargo clippy
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{ github.event_name }}" == "pull_request "]
          then
            REPORTER="github-pr-check"
          else
            REPORTER="github-check"
          fi
          cargo clippy --message-format json 2>&1 | clippy-reviewdog-filter reviewdog -f=checkstyle -reporter=$REPORTER

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all

      - uses: reviewdog/action-suggester@v1
        with:
          tool_name: rustfmt
